@page "/learnBlazor/blazorjs"
@inject IJSRuntime _JsRuntime

<h3>BlazorJs</h3>
<div class="row">
    <button class="btn btn-primary" style="width:200px;" @onclick="TestConfirmBoxAsync">Test Confirm Button</button>

    @if (ConfirmResult)
    {
        <p class="alert alert-success mt-2">Confirmation has been made!</p>
    }
    else
    {
        <p class="alert alert-warning mt-2">Confirmation Pending!</p>
    }
</div>

<div class="row mt-2">
    <button class="btn btn-success m-1" style="width:200px;" @onclick="ToastrSuccess">Toastr Success</button>
    <button class="btn btn-danger m-1" style="width:200px;" @onclick="ToastrFailure">Toastr Failer</button>
</div>

<div class="row mt-2">
    <button class="btn btn-success m-1" style="width:200px;" @onclick="SweetAlertSuccess">SweetAlert Success</button>
    <button class="btn btn-danger m-1" style="width:200px;" @onclick="SweetAlertFailure">SweetAlert Failer</button>
</div>

@code {
    private string ConfirmMessage = "Are you sure you want to click?";
    private bool ConfirmResult = false;

    private async Task TestConfirmBoxAsync()
    {
        ConfirmResult = await _JsRuntime.InvokeAsync<bool>("confirm", ConfirmMessage);
    }

    private async Task ToastrSuccess()
    {
        await _JsRuntime.ToastrSuccess("Operation Successful!");
    }

    private async Task ToastrFailure()
    {
        await _JsRuntime.ToastrError("Operation Failed!");
    }

    private async Task SweetAlertSuccess()
    {
        await _JsRuntime.SweetAlertSuccess("Task completed successfully!");
    }

    private async Task SweetAlertFailure()
    {
        await _JsRuntime.SweetAlertFailure("Task failed!");
    }
}
